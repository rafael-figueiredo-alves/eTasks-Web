@using eTasks.Components.Enums
@using eTranslate.Interfaces


<div class="changelog-container">
    <h3 class="changelog-title" style="color: @CorTitles">@Titulo</h3>
    <div class="changelog" style="border: 2px solid @CorTitles;">
        @foreach(Changelog change in Changelogs)
        {
            <p style="color: @CorText;">
                <strong style="color: @CorTitles">@change.VersionTitle</strong><br />
                @foreach(string feature in change.Features)
                {
                    @($"{feature}")<br />
                }
            </p>
        }
    </div>
</div>

@code {
    #region Serviço injetado
    [Inject] public IeTranslate? ETranslate { get; set; }
    #endregion

    #region Parâmetros
    [Parameter] public bool isDarkTheme { get; set; } = false;
    [Parameter] public List<Changelog> Changelogs { get; set; } = new List<Changelog>();
    #endregion

    #region Variáveis
    private string CorTitles { get; set; } = string.Empty;
    private string CorText { get; set; } = string.Empty;
    private string Titulo { get; set; } = "Histórico de versão";
    #endregion

    #region Métodos
    protected override async Task OnParametersSetAsync()
    {
        await Task.CompletedTask;
        CorTitles = ColorPallete.GetColor(Cor.Primary, isDarkTheme);
        CorText = ColorPallete.GetColor(Cor.Secondary, isDarkTheme);

        Titulo = $"{await ETranslate!.Translate(TranslateKeyConsts.About_About_Changelog_Title)}";
    }
    #endregion
}
