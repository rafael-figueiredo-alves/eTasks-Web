@using eTasks.Components.Enums
@using eTranslate.Interfaces

<div class="d-flex justify-content-center align-items-center">
    <img src="assets/icon-192.webp" width="160" height="160" />
</div>

<div class="d-flex justify-content-center align-items-center">
    <h1 style="font-family: Roboto; font-size: 36px; color: @CorAppTitle">eTasks</h1>
</div>

<div class="d-flex justify-content-center align-items-center">
    <div class="d-flex" style="width: 110px; justify-content: end; color: @CorVersao;">
        <sup>@TextoVersao</sup>
    </div>
</div>

@code{
    #region Serviço injetado
    [Inject] public IeTranslate? ETranslate { get; set; }
    #endregion

    #region Parâmetros
    [Parameter] public bool isDarkTheme { get; set; } = false;
    [Parameter] public string AppVersion { get; set; } = "2.0.0";
    [Parameter] public string Language { get; set; } = "Versão";
    #endregion

    #region Variáveis
    private string CorAppTitle { get; set; } = string.Empty;
    private string CorVersao { get; set; } = string.Empty;
    private string TextoVersao { get; set; } = "Versão";
    #endregion

    #region Métodos
    protected override async Task OnParametersSetAsync()
    {
        await Task.CompletedTask;
        CorAppTitle = ColorPallete.GetColor(Cor.Primary, isDarkTheme);
        CorVersao   = ColorPallete.GetColor(Cor.Secondary, isDarkTheme);

        TextoVersao = $"Versão {AppVersion}";
        TextoVersao = $"{await ETranslate!.Translate(TranslateKeyConsts.About_About_Heading_Version)} {AppVersion}";
    }
    #endregion
}
