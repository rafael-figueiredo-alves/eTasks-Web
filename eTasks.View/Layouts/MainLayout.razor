@inherits LayoutComponentBase

<div class="page" style="background-color: @(CorFundo)">
    <main>
        <TopBar isDarkMode="@ThemeChange">
            <Brand />
            <TitleBar />
            <ButtonBar Botoes="Botoes" AvatarOffcanvasMenuID="#AvatarMenu" AvatarPath="assets/UI/Avatar2.png" isDarkMode="@ThemeChange" />
        </TopBar>

        <Offcanvas OffcanvasID="TesteMenu" />
        <Offcanvas OffcanvasID="AvatarMenu" Posicao="Offcanvas.PosicaoOffCanvas.Direita" direcaoOffCanvas="Offcanvas.DirecaoOffCanvas.direita" EOffcanvasPerfil="true" />

        <PageTitleBar />

        

        <article class="content px-4 user-select-none">
            @Body
        </article>
    </main>
</div>

@code {
    [Inject] protected NavigationManager? navigationManager { get; set; }

    protected List<BarButton> Botoes { get; set; } = new();

    protected bool ThemeChange { get; set; } = false;
    protected string CorFundo { get; set; } = string.Empty;

    protected override void OnInitialized()
    {        
        var button1 = new BarButton();
        button1.Imagem = "ThemeChanger.png";
        button1.DicaTela = "Tema Escuro";
        button1.OnClick = TesteClick;
        Botoes.Add(button1);
        var button = new BarButton();
        button.Imagem = "MainMenu.png";
        button.DicaTela = "Menu";
        button.OffcanvasMenuID = "#TesteMenu";
        Botoes.Add(button);
        CorFundo = Components.ColorPallete.GetColor(Components.Cor.Background, ThemeChange);
    }

    private void TesteClick()
    {
        ThemeChange = !ThemeChange;
        CorFundo = Components.ColorPallete.GetColor(Components.Cor.Background, ThemeChange);
        Console.WriteLine("Teste");
    }
}
